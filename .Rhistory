wget
A <- c(9,3,10,200,1,2,21,720,1500,60)
B <- c(30,30,480,900,2,1,5400,1500,480,3)
C <- c(3900,10800,28900,3600,200,120,500,600,1980,160)
D <- c(5,9,20,180,15,20,2,17,30,8)
treatments <- c(A + B + C + D)
treatments <- c(A, B, C, D)
groups <- -c(rep("A", 10), rep("B", 10),
rep("C", 10), rep("D", 10))
groups <- c(rep("A", 10), rep("B", 10),
rep("C", 10), rep("D", 10))
treatments.df <- data.frame(treatments, groups)
results = aov(treatments ~ groups, data=treatments.df)
View(results)
treatments.df <- data.frame(treatments, groups)
bartlett.test(treatments, groups)
aov(treatments~groups, data = treatments.df)
results_aov <- aov(treatments~groups, data = treatments.df)
summary(results_aov)
TukeyHSD(aov(treatments~groups, data = treatments.df))
summary(results_aov)
#Anova by hand
mom = (mean(A) + mean(B) + mean(C) + mean(D)) / 4
ssa = (6*(mean(A) - mom)^2) + (6*(mean(B) - mom)^2) + (6*(mean(C) - mom)^2) + (6*(mean(D) - mom)^2)
msa = ssa / (4-1)
dvara = var(A)
dvarb = var(B)
dvarc = var(C)
dvard = var(D)
ssw = (6-1) * dvara + (6-1) * dvarb + (6-1) * dvarc + (6-1)*dvard
msw = ssw / (24 - 4)
N = 40
k = 4
#Anova by hand
mom = (mean(A) + mean(B) + mean(C) + mean(D)) / 4
ssa = (6*(mean(A) - mom)^2) + (6*(mean(B) - mom)^2) + (6*(mean(C) - mom)^2) + (6*(mean(D) - mom)^2)
msa = ssa / (k-1)
dvara = var(A)
dvarb = var(B)
dvarc = var(C)
dvard = var(D)
ssw = (6-1) * dvara + (6-1) * dvarb + (6-1) * dvarc + (6-1)*dvard
msw = ssw / (N - k)
n = 10
#Anova by hand
mom = (mean(A) + mean(B) + mean(C) + mean(D)) / k
ssa = (n*(mean(A) - mom)^2) + (n*(mean(B) - mom)^2) + (n*(mean(C) - mom)^2) + (n*(mean(D) - mom)^2)
msa = ssa / (k-1)
dvara = var(A)
dvarb = var(B)
dvarc = var(C)
dvard = var(D)
ssw = (n-1) * dvara + (n-1) * dvarb + (n-1) * dvarc + (n-1)*dvard
msw = ssw / (N - k)
fstat = msa/msw
fstat
pond <- c(0.518, 0.523, 0.495 , 0.502, 0.525, 0.49)
DI <- c(0.318 ,0.342 , 0.301, 0.39 ,0.327 , 0.32)
sodium <- c(0.393, 0.415, 0.351, 0.39, 0.385, 0.397)
groups2 <- c(rep("Pond", 10), rep("DI", 10),
rep("Sodium", 10))
clam.data <- c(pond,DI,sodium)
clams <- data.frame(clam.data, groups2)
groups2 <- c(rep("Pond", 6), rep("DI", 6),
rep("Sodium", 6))
clams <- data.frame(clam.data, groups2)
View(clams)
bartlett.test(clams, groups2)
bartlett.test(clam.data, groups2)
results_aov2 <- aov(clam.data~groups2, data = clams)
summary(results_aov2)
N = 18
k = 3
n = 6
mom = (mean(pond) + mean(DI) + mean(sodium) / k
mom = (mean(pond) + mean(DI) + mean(sodium) / k
mom = (mean(pond) + mean(DI) + mean(sodium) / k)
N = 18
k = 3
n = 6
mom = (mean(pond) + mean(DI) + mean(sodium) / k)
ssa = (n*(mean(pond) - mom)^2) + (n*(mean(DI) - mom)^2) + (n*(mean(sodium) - mom)^2)
msa = ssa / (k-1)
dvara = var(pond)
dvarb = var(DI)
dvarc = var(sodium)
ssw = (n-1) * dvara + (n-1) * dvarb + (n-1) * dvarc + (n-1)*dvard
msw = ssw / (N - k)
fstat = msa/msw
fstat
msa = ssa / (k-1)
dvara = var(pond)
dvarb = var(DI)
dvarc = var(sodium)
ssw = (n-1) * dvara + (n-1) * dvarb + (n-1) * dvarc + (n-1)*dvard
msw = ssw / (N - k)
fstat = msa/msw
fstat
N = 18
k = 3
n = 6
mom = (mean(pond) + mean(DI) + mean(sodium) / k)
ssa = (n*(mean(pond) - mom)^2) + (n*(mean(DI) - mom)^2) + (n*(mean(sodium) - mom)^2)
msa = ssa / (k-1)
dvara = var(pond)
dvarb = var(DI)
dvarc = var(sodium)
ssw = (n-1) * dvara + (n-1) * dvarb + (n-1) * dvarc + (n-1)*dvard
msw = ssw / (N - k)
fstat = msa/msw
mom = (mean(pond) + mean(DI) + mean(sodium) / k)
ssa = (n*(mean(pond) - mom)^2) + (n*(mean(DI) - mom)^2) + (n*(mean(sodium) - mom)^2)
msa = ssa / (k-1)
dvara = var(pond)
dvarb = var(DI)
dvarc = var(sodium)
ssw = (n-1) * dvara + (n-1) * dvarb + (n-1) * dvarc
msw = ssw / (N - k)
fstat = msa/msw
fstat
dataone <- list(A,B,C)
kruskal.test(dataone)
sort(treatments, decreasing = FALSE)
[12/(40(40+1)) * (141.5^2/10 + 208.5^2/10 + 316.5^2/10 + 132.5^2/10)] - 123
12/(40(40+1)) * (141.5^2/10 + 208.5^2/10 + 316.5^2/10 + 132.5^2/10) - 123
(12/(40(40+1)) * (141.5^2/10 + 208.5^2/10 + 316.5^2/10 + 132.5^2/10)) - 123
12/(40(40+1)
kruskalhand <- (12/(40(40+1)) * (141.5^2/10 + 208.5^2/10 + 316.5^2/10 + 132.5^2/10)) - 123
View(treatments.df)
View(treatments.df)
logtreatments <- treatments.df$treatments
View(treatments.df)
logtreatments <- log(treatments.df$treatments)
shapiro.test(logtreatments)
logtreatments.df <- data.frame(logtreatments, groups)
results_aov <- aov(logtreatments~groups, data = treatments.df)
summary(results_aov)
logtreatments <- log(treatments.df$treatments)
shapiro.test(logtreatments)
logtreatments.df <- data.frame(logtreatments, groups)
results_aov <- aov(logtreatments~groups, data = treatments.df)
summary(results_aov)
logtreatments.df <- data.frame(logtreatments, groups)
results_aov <- aov(logtreatments~groups, data = logtreatments.df)
summary(results_aov)
reticulate::repl_python()
x = 12
print(4+x)
rm(x)
#Turtle Gene Family Counts  -  Paul Zimmerman  -  Began: 02/06/2025  -  Using Generative AI
setwd('C:/Users/PALL/Desktop/Yohe_lab/')   #using a working directory closer to the main directory from now on
#setting up packages for work environment        BiocManager::install("package")
library(ggplot2)
library(wesanderson)    #color palette
library(reshape2)
library(plyr)
library(dplyr)
library(geiger)
library(phytools)
library(tidyr)
library(ape)
library(ComplexHeatmap)
library(autoimage)
library(tidyverse)
#Reading in OR data and formatting if necessary
OR.data <- read.csv("./turtle_files/Dino_OR_Taxa_Corrected_6_25_25_edit.csv", header = TRUE, row.names = 1)   #first column is row names; must use row names
rownames(OR.data) <- gsub(".collapsed.fasta", "", rownames(OR.data))  #removing collapsed.fasta from the rownames
names(OR.data)[1] <- "Organism.Name"    #changes first column to match the testudines genome table from ncbi, not necessary anymore and code can be redone for original format
